{
    "stdout_visibility": "visible",
    "tests": [
        {
            "score": 0,
            "status": "failed",
            "max_score": 0,
            "name": "test_env",
            "output": "    def test_env():\n        env_info = get_env_info()\n        assert env_info.torch_version.startswith(\"2.\")\n>       assert env_info.python_version.startswith(\"3.11\")\nE       AssertionError: assert False\nE        +  where False = <built-in method startswith of str object at 0x109ad6970>('3.11')\nE        +    where <built-in method startswith of str object at 0x109ad6970> = '3.13.5 | packaged by Anaconda, Inc. | (main, Jun 12 2025, 11:23:37) [Clang 14.0.6 ] (64-bit runtime)'.startswith\nE        +      where '3.13.5 | packaged by Anaconda, Inc. | (main, Jun 12 2025, 11:23:37) [Clang 14.0.6 ] (64-bit runtime)' = SystemEnv(torch_version='2.8.0', is_debug_build='False', cuda_compiled_version=None, gcc_version=None, clang_version='...ion='N/A', miopen_runtime_version='N/A', caching_allocator_config='', is_xnnpack_available='True', cpu_info='Apple M1').python_version\nNone\ntests/test_env.py:443: AssertionError",
            "visibility": "visible"
        }
    ]
}